pipeline {
    agent any

    stages {
        stage('Checkout Code') {
            steps {
                // Checkout the repository containing Terraform files
                checkout scm
            }
        }
        stage('Terraform') {
            steps {
                script {
                    // Change directory to the Terraform deployment folder
                    dir('jenkins/Terraform-Deployment') {
                        // Initialize Terraform
                        sh 'terraform init'

                        // (Optional) Validate Terraform configuration
                        sh 'terraform validate'


                        // (Optional) Output Terraform execution plan
                        sh 'terraform plan'

                         // Apply Terraform changes
                        sh 'terraform apply -auto-approve -lock=false'


                        // Capture the output
                        def appServerIp = sh(script: 'terraform output -raw app_server_public_ip', returnStdout: true).trim()
                        // Set the IP as an environment variable or pass it to the next stage
                        env.APP_SERVER_IP = appServerIp

                        // (Optional) Destroy Terraform resources
                        //sh 'terraform destroy -auto-approve -lock=false'
                    }
                }
            }
        }
    }
}
